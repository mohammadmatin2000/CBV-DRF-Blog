version: "3.8"  # Specifies the Docker Compose version

services:
  # ======================================================================================================================
  # Backend service configuration
  redis:
    container_name: redis
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"

  backend:
    build: .  # Uses the current directory as the build context
    command: python manage.py runserver 0.0.0.0:8000  # Runs the Django development server
    container_name: backend  # Sets a custom name for the container

    volumes:
      - ./core:/app  # Mounts the local "core" directory to "/app" inside the container (for persistent data)

    ports:
      - "8000:8000"  # Maps port 8000 in the container to port 8000 on the host

    environment:
      - SECRET_KEY=test  # Defines a temporary secret key for testing (replace in production)
      - DEBUG=True  # Enables Django's debug mode (should be False in production)
      - ALLOWED_HOSTS=localhost,127.0.0.1  # Defines allowed hosts for Django server access
    depends_on:
      - redis

  worker:
    build: .
    command: celery -A core worker --loglevel=info

    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend

  # ======================================================================================================================
  # SMTP mail server (smtp4dev) for testing email functionality
  smtp4dev:
    image: rnwood/smtp4dev:v3  # Uses the official smtp4dev Docker image
    restart: always  # Ensures the service restarts automatically if it stops

    ports:
      - '5000:80'  # Maps the web interface to port 5000 on the host
      - '25:25'  # Exposes SMTP service on port 25 (for sending emails)
      - '143:143'  # Exposes IMAP service on port 143 (for email retrieval)

    volumes:
      - smtp4dev-data:/smtp4dev  # Creates a named volume for smtp4dev storage (persistent email data)

    environment:
      - ServerOptions__Urls=http://*:80
      - ServerOptions__HostName=smtp4dev

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://backend:8000

  workers:
    image: locustio/locust
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master
# ======================================================================================================================
# Volume Configuration: Defines persistent storage locations
volumes:
  smtp4dev-data:  # Creates a named volume for smtp4dev storage